# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Expires map

map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    ~application/              max;
    ~image/                    max;
}

server {
	# Make site accessible from http://localhost/
	gzip on;
	gzip_comp_level 2;
	gzip_http_version 1.0;
	gzip_proxied any;
	gzip_buffers 16 8k;
	gzip_types
		text/plain
		text/css
		text/js
		text/xml
		text/javascript
		application/javascript
		application/x-javascript
		application/json
		application/xml
		application/rss+xml
		image/svg+xml;
	gzip_disable "MSIE [1-6].(?!.*SV1)";
	gzip_vary on;
        
{% if fqdn|length  %}
        server_name {{fqdn}} www.{{fqdn}};
{% else %}
        server_name {{nginx_host}};
{% endif %}

        location /{{static_url}}/ {
            proxy_pass http://127.0.0.1:{{nginx_port}}/{{static_url}}/;
        }

        location / {
            proxy_pass http://127.0.0.1:{{nginx_port}}/;
        }

        expires $expires;

    listen 80; # managed by Certbot

# XXX FIXME figure out https later
#     listen 443 ssl; # managed by Certbot
# ssl_certificate /etc/letsencrypt/live/{{fqdn}}/fullchain.pem; # managed by Certbot
# ssl_certificate_key /etc/letsencrypt/live/{{fqdn}}/privkey.pem; # managed by Certbot
#     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
#
#     # Redirect non-https traffic to https
#     if ($scheme != "https") {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
}
